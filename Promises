PROMISE:
a promise is a special java script object that represents the eventual completion (or failure )of an asynchronous operation.


---1)three states 
  ---1)pending : the intial state, the promise is still waiting fotr the operation to finish
---2)Fulfilled: the operation completed successfully
---3)Rejected: the operation failed

Exp: 
--To create a promise new promise();
the promise constructor takes a function with two parameters:
resolve --to mark as the promise is successful
reject --to mark it a failed

Handling: 
.then () menthod is called when the promise is fulfilled,
it receive the result from the resolve();

Catch() method is called when promise is rejected();

let myPromise = new Promise((resolve,reject)=>{
    let success = true
    if(success){
      resolve("The operation is successfull")
      }else{
        reject("The operation is failed")
      }
  });
  myPromise.then(result=>{
    console.log(result)
  })
  .catch(error=>{
    console.log(error)
    })

Output:The operation is successful



 new Promise((resolve, reject) => {
      setTimeout(() => {
          resolve('success');
      }, 1000);
      }
  ).then((data) => {
      console.log(data);  
      return 'some other data';
  }
  ).then((data) => {
      console.log(data);
  }
  ).catch((error) => {
      console.log(error);
  }  
  );

Output:success
 some other data




  let delayedPromise = new Promise((resolve, reject) => {
    setTimeout(() => {
        resolve("Promise resolved after 2 seconds");
    }, 2000); 
});

delayedPromise
    .then(result => {
        console.log(result); 
    })
    .catch(error => {
        console.log("Error:", error);
    });


Output:Promise resolved after 2 seconds

