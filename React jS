--to create element in react js
--React.createElement()
Syntax:
Type=tag name(h1,p,div)
prop=class,id


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script crossorigin src="https://unpkg.com/react@18/umd/react.development.js"></script>
<script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
</head>
<body>
    <div id="a"></div>
    <script>
        const b=React.createElement('h1',{id:'c'},"Iam Venky")
        const e=document.getElementById('a')
        const root=ReactDOM.createRoot(e)
        root.render(b)
    </script>
</body>
</html>


Output :Iam venky

JSX:

--javascript xml
--it is a syntax extension for javascript
--jsx allows us to write html code in react js
--by using jsx all html tags must be closed
--jsx compiles the html code to js
--Babel is a tool in jsx;


   <script crossorigin src="https://unpkg.com/react@18/umd/react.development.js"></script>
<script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
<script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
</head>
<body>
    <div id="a"></div>
    <script type="text/babel">
        const element=<h1 className="aa">Welcome to Venky IT solutions</h1>
        const e=document.getElementById('a')
        const root=ReactDOM.createRoot(e)
        root.render(element)
    </script>
</body>
</html>

Output:Welcome to Venky IT solutions


<body>
    <div id="a"></div>
    <script type="text/babel">
        const n=5
        const m=<h1>React is {n*2} times better than jsx</h1>
        const e=document.getElementById('a')
        const root=ReactDOM.createRoot(e)
        root.render(m)
    </script>
</body>
</html>

Output:React is 10 times better than jsx


conditional Rendering:

<body>
    <div id="root"></div>
    <script type="text/babel">
        const App=()=>{
            const isloggedIn=true;
            return(
                <div>
                    {isloggedIn?(<h1>Welcome back,user</h1>):(<h1>Please login</h1>)}

                    {isloggedIn && <h1>you have new Notification</h1>}
                </div>

            )
            
            
        }
    
    const root=ReactDOM.createRoot(document.getElementById('root'))
    root.render(<App/>)
    </script>

Output:Welcome back,user
you have new Notification


Function:

Using a function call:

--you can use a function call directly within the jsx expression also

<div id="a"></div>
    <script type="text/babel">
        function getGreeting(name){
            return `Hello, ${name}! welcome to React`;
        }
        function Greeting(){
            const name="Venky"
            return <h1>{getGreeting(name)}</h1>

        }
        const root =ReactDOM.createRoot(document.getElementById('a'))
        root.render(<Greeting/>)

Output:Hello, Venky! welcome to React
